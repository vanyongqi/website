version: "3.9"
services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: /app/conf/confyg.yaml
      APP_SERVER_ENV: production
    volumes:
      - ./conf:/app/conf:ro
    depends_on:
      mysql:
        condition: service_healthy

  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    volumes:
      - web_dist:/out
    # 该容器启动后会一次性将 dist 拷贝到卷中，然后退出

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - web_dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - api
      - web

volumes:
  mysql_data:
  web_dist:
